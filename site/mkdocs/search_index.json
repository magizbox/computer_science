{
    "docs": [
        {
            "location": "/", 
            "text": "Computer Science\n\n\nChallenges\n\n\nProject Euler\n\n\n\n\n\n\nProject Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve. Although mathematics will help\nyou arrive at elegant and efficient methods, the use of a computer and programming skills will be required to solve most problems.\n\n\nThe motivation for starting Project Euler, and its continuation, is to provide a platform for the inquiring mind to delve into unfamiliar areas and learn new concepts in a fun and recreational context.\n\n\n\n\ngithub\n\n\nKaggle\n\n\ndatayo", 
            "title": "Home"
        }, 
        {
            "location": "/#computer-science", 
            "text": "", 
            "title": "Computer Science"
        }, 
        {
            "location": "/#challenges", 
            "text": "", 
            "title": "Challenges"
        }, 
        {
            "location": "/#project-euler", 
            "text": "Project Euler is a series of challenging mathematical/computer programming problems that will require more than just mathematical insights to solve. Although mathematics will help\nyou arrive at elegant and efficient methods, the use of a computer and programming skills will be required to solve most problems.  The motivation for starting Project Euler, and its continuation, is to provide a platform for the inquiring mind to delve into unfamiliar areas and learn new concepts in a fun and recreational context.   github", 
            "title": "Project Euler"
        }, 
        {
            "location": "/#kaggle", 
            "text": "datayo", 
            "title": "Kaggle"
        }, 
        {
            "location": "/database/", 
            "text": "Database\n\n\n![][1]\n\n\nRelational DBMS: [Oracle][2], [MySQL][3] \n(\ndownload\n)\n, [SQLite][4]\n\n\nKey-value Stores: [Redis][5], [Memcached][6]\n\n\nDocument stores: [MongoDB][7]\n\n\nGraph: [Neo4j][8]\n\n\nWide column stores: [Cassandra][9], [HBase][10]\n\n\nDesign and Modeling (a.k.a Data Definition)\n\n\n1.1 Schema \n1\n\n\nA database schema of a database system is its structure described in a formal language supported by the database management system (DBMS) and refers to the organization of data as a blueprint of how a database is constructed (divided into database tables in the case of Relational Databases). The formal definition of database schema is a set of formulas (sentences) called integrity constraints imposed on a database. These integrity constraints ensure compatibility between parts of the schema. All constraints are expressible in the same language. A database can be considered a structure in realization of the database language. The states of a created conceptual schema are transformed into an explicit mapping, the database schema. This describes how real world entities are modeled in the database.\n\n\n![][11]\n\n\n1.1.1 Type \n2\n \n3\n\n\nIn computer science and computer programming, a data type or simply type is a classification identifying one of various types of data, such as real, integer or Boolean, that determines the possible values for that type; the operations that can be done on values of that type; the meaning of the data; and the way values of that type can be stored.\n\n\nTEXT\n, \nINT\n, \nENUM\n, \nTIMESTAMP\n\n\n1.2 Cardinality (a.k.a Relationship) \n4\n\n\n![][12] \nForeign key\n, \nPrimary key\n\n\n1.2 Indexing\n\n\nA database index is a data structure that improves the speed of data retrieval operations on a database table at the cost of additional writes and storage space to maintain the index data structure. Indexes are used to quickly locate data without having to search every row in a database table every time a database table is accessed. Indexes can be created using one or more columns of a database table, providing the basis for both rapid random lookups and efficient access of ordered records. Why Indexing is important?\n\n\n![][13] \nIndexing in MySQL\n \n5\n Indexes are used to find rows with specific column values quickly. Without an index, MySQL must begin with the first row and then read through the entire table to find the relevant rows. The larger the table, the more this costs. If the table has an index for the columns in question, MySQL can quickly determine the position to seek to in the middle of the data file without having to look at all the data. This is much faster than reading every row sequentially. ![][14]\n\n\nCREATE INDEX NameIndex ON Employee (name)\nSELECT * FROM Employee WHERE name = 'Ashish'\n\n\n\n\n2. Data Manipulation\n\n\nCreate - Read - Update - Delete \n6\n\n\n![][15]\n\n\n\n\nCreate or add new entries\n\n\nRead, retrieve, search, or view existing entries * Update or edit existing entries * Delete/deactivate existing entries\n\n\n\n\n/* create */\nCREATE TABLE Guests ( id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, firstname VARCHAR(30) NOT NULL, lastname VARCHAR(30) NOT NULL, email VARCHAR(50), reg_date TIMESTAMP )\n/* create (insert) */\nINSERT INTO Guests (firstname, lastname, email) VALUES ('John', 'Doe', 'john@example.com')\n/* read */\nSELECT * FROM Guests WHERE id=1 /* update */ UPDATE Guests SET lastname='Doe' WHERE id=1\n/* delete */\nDELETE FROM Guests WHERE id=1`\n\n\n\n\n3. Data Retrieve \n Transaction\n\n\n3.1 Data Retrieve\n\n\nSELECT\n, \nWHERE\n, \nFROM\n, \nLIMIT\n, \nJOIN\n, \nGROUP BY\n, \nHAVING\n\n\nGet user id, user name and number of post of this user\n\n\nSELECT user.id, user.name, COUNT(post.*) AS posts\nFROM user LEFT OUTER JOIN post ON post.owner_id=user.id GROUP BY user.id`\n\n\n\n\nSelect user who only order one time.\n\n\nSELECT name, COUNT(name) AS c FROM orders GROUP BY name HAVING c = 1;\n\n\n\n\nCalculate the longest period (in days) that the company has gone without a hiring or firing anyone.\n\n\nSELECT x.date, MIN(y.date) y_date, DATEDIFF(MIN(y.date),x.date) days\nFROM ( SELECT hiredate date FROM employees UNION SELECT terminationdate FROM employees ) x\nJOIN ( SELECT hiredate date FROM employees UNION SELECT terminationdate FROM employees UNION SELECT CURDATE()) y\nON y.date \n x.date GROUP BY x.date ORDER BY days DESC LIMIT 1;\n\n\n\n\nData Retrieve API\n\n\n\n\n\n\n\n\nAPI\n\n\nDescription\n\n\n\n\n\n\nget\n\n\nget single item\n\n\n\n\n\n\n\n\nGet dog by id\n\n\nDog.get(1)\n\n\n\n\n\n\n\n\nfind\n\n\n\n\nfind items\n\n\n@see\ncollection.find()\n\n\n\n\n\n\n\n\n\n\nFind dog name \"Max\"\n\n\n Dog.find({\"name\": \"Max\"})\n\n\n\n\n\n\n\n\nsort\n\n\n\n\nsort items\n\n\n@see\ncursor.sort\n\n\n\n\n\n\n\n\n\n\nGet 10 older dogs\n\n\nDog.find().sort(\"age\", {limit: 10})\n\n\n\n\n\n\n\n\naggregate\n\n\n\n\nsum, min, max items\n\n\n@see\ncollection.aggregate\n\n\n\n\n\n\n\n\n\n\nGet sum of dogs' age\n\n\nDog.find().aggregate({\n  \"sum_age\":  {\n     $sum: \"age\"\n   }\n})\n\n\n\n\n\n\n\n\n\n\n\n3.2 Transaction\n\n\nA transaction symbolizes a unit of work performed within a database management system (or similar system) against a database, and treated in a coherent and reliable way independent of other transactions. A transaction generally represents any change in database. Example: Transfer 900$ from Account\n\n\nBob\n to \nAlice\n \n7\n\n\nstart transaction\nselect balance from Account where Account_Number='Bob';\nselect balance from Account where Account_Number='Alice';\nupdate Account set balance=balance-900 here Account_Number='Bob' ;\nupdate Account set balance=balance+900 here Account_Number='Alice' ;\ncommit; //if all sql queries succed rollback; //if any of Sql queries failed or error\n\n\n\n\nACID Properties\n \n8\n\n\nIn computer science, ACID (Atomicity, Consistency, Isolation, Durability) is a set of properties that guarantee that database transactions are processed reliably. In the context of databases, a single logical operation on the data is called a transaction.\n\n\nFor example, a transfer of funds from one bank account to another, even involving multiple changes such as debiting one account and crediting another, is a single transaction. ![][16]\n\n\n4. Backup and Restore \n9\n\n\nSometimes it is desired to bring a database back to a previous state (for many reasons, e.g., cases when the database is found corrupted due to a software error, or if it has been updated with erroneous data). To achieve this a backup operation is done occasionally or continuously, where each desired database state (i.e., the values of its data and their embedding in database's data structures) is kept within dedicated backup files (many techniques exist to do this effectively). When this state is needed, i.e., when it is decided by a database administrator to bring the database back to this state (e.g., by specifying this state by a desired point in time when the database was in this state), these files are utilized to restore that state.\n\n\n5. Migration \n10\n\n\nIn software engineering, schema migration (also database migration, database change management) refers to the management of incremental, reversible changes to relational database schemas. A schema migration is performed on a database whenever it is necessary to update or revert that database's schema to some newer or older version. Example: Android Migration by droid-migrate\n\n\n11\n\n\ndroid-migrate init -d my_database droid-migrate generate up droid-migrate generate down\n\n\n\n\nExample: Database Seeding with Laravel \n12\n \nshell php artisan migrate:make seed_roles_table php artisan migrate:make seed_users_table php artisan migrate:reset php artisan db:seed\n\n\n6. Active record pattern | Object-Relational Mapping (ORM) \n13\n\n\nObject-relational mapping in computer science is a programming technique for converting data between incompatible type systems in object-oriented programming languages. This creates, in effect, a \"virtual object database\" that can be used from within the programming language. There are both free and commercial packages available that perform object-relational mapping, although some programmers opt to create their own ORM tools.\n\n\n![][17] \nExample\n\n\nphp\n \n14\n\n\n$employee = new Employee(); $employee-\nsetName(\nJoe\n); $employee-\nsave();\n[/code]\n\n`Android` \nsup id=\nfnref-2159-10\na href=\n#fn-2159-10\n rel=\nfootnote\n15\n/a\n/sup\n\n\n```java\npublic class User {\n  @DatabaseField(id = true) String username;\n  @DatabaseField String password;\n  @DatabaseField String email;\n  @DatabaseField String alias;\n  public User() {} }\n\n\n\n\nImplementations\n\n\n\n\nAndroid: [ormlite-android][18] \n16\n\n\nPHP: [Eloquent][19]\n\n\n\n\n\n  \nDatabase schema\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nData type\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nSQL Data Types for Various DBs\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nCardinality (data modeling)\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nHow MySQL Uses Indexes\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nCreate, read, update and delete\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nDatabase Transaction Tutorial in SQL with Example for Beginners\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nACID\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nDatabase\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nSchema migration\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \naglover/droid-migrate\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nDatabase Seeding with Laravel\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nObject-relational mapping\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nObject Relational Mapping in PHP\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \nAn Android Repository with ORMLite (Using an existing SQLite database)\n\u00a0\n\u21a9\n\n\n\n\n\n\n  \n5 of the Best Android ORMs\n\u00a0\n\u21a9\n \n\n  \n\n\n[1]: http://www.netsolutionsindia.com/blog/wp-content/uploads/2014/07/Mongodb-Nosql.jpg\n[2]: http://www.oracle.com/index.html\n[3]: http://www.mysql.com/\n[4]: http://sqlite.org/\n[5]: http://redis.io/\n[6]: http://memcached.org/\n[7]: https://www.mongodb.org/\n[8]: http://neo4j.com/\n[9]: http://cassandra.apache.org/\n[10]: http://hbase.apache.org/\n[11]: http://i.imgur.com/uEuEdPv.png\n[12]: http://i.stack.imgur.com/Z6tTL.gif\n[13]: http://cdn.guru99.com/images/Index.jpg\n[14]: http://image.slidesharecdn.com/mysqlindex-091118043907-phpapp02/95/indexing-the-mysql-index-key-to-performance-tuning-17-638.jpg?cb=1357187786\n[15]: https://www.pingidentity.com/content/dam/pic/images/glyphs/22_Capabilities_UserProvisioningDeprovisioning_b3_r.png\n[16]: https://lh6.googleusercontent.com/y9qoNuNGdd9COo0twXUrefyy6ZKmRs3iFPIMKpJ7UZRXqX7Bc5lXFutzaKLFf0ZPD4Sl7uDj1CvQoCh2kOd9ZNkKokw_-xZ-QUwX8mWkKDexO0I58Oo\n[17]: https://symfony-docs-chs.readthedocs.org/en/latest/_images/doctrine_image_1.png\n[18]: https://github.com/j256/ormlite-android\n[19]: http://laravel.com/docs/4.2/eloquent", 
            "title": "Introduction"
        }, 
        {
            "location": "/database/#database", 
            "text": "![][1]  Relational DBMS: [Oracle][2], [MySQL][3]  ( download ) , [SQLite][4]  Key-value Stores: [Redis][5], [Memcached][6]  Document stores: [MongoDB][7]  Graph: [Neo4j][8]  Wide column stores: [Cassandra][9], [HBase][10]", 
            "title": "Database"
        }, 
        {
            "location": "/database/#design-and-modeling-aka-data-definition", 
            "text": "", 
            "title": "Design and Modeling (a.k.a Data Definition)"
        }, 
        {
            "location": "/database/#1461-schema-1", 
            "text": "A database schema of a database system is its structure described in a formal language supported by the database management system (DBMS) and refers to the organization of data as a blueprint of how a database is constructed (divided into database tables in the case of Relational Databases). The formal definition of database schema is a set of formulas (sentences) called integrity constraints imposed on a database. These integrity constraints ensure compatibility between parts of the schema. All constraints are expressible in the same language. A database can be considered a structure in realization of the database language. The states of a created conceptual schema are transformed into an explicit mapping, the database schema. This describes how real world entities are modeled in the database.  ![][11]", 
            "title": "1.1 Schema 1"
        }, 
        {
            "location": "/database/#12-cardinality-aka-relationship-4", 
            "text": "![][12]  Foreign key ,  Primary key", 
            "title": "1.2 Cardinality (a.k.a Relationship) 4"
        }, 
        {
            "location": "/database/#1462-indexing", 
            "text": "A database index is a data structure that improves the speed of data retrieval operations on a database table at the cost of additional writes and storage space to maintain the index data structure. Indexes are used to quickly locate data without having to search every row in a database table every time a database table is accessed. Indexes can be created using one or more columns of a database table, providing the basis for both rapid random lookups and efficient access of ordered records. Why Indexing is important?  ![][13]  Indexing in MySQL   5  Indexes are used to find rows with specific column values quickly. Without an index, MySQL must begin with the first row and then read through the entire table to find the relevant rows. The larger the table, the more this costs. If the table has an index for the columns in question, MySQL can quickly determine the position to seek to in the middle of the data file without having to look at all the data. This is much faster than reading every row sequentially. ![][14]  CREATE INDEX NameIndex ON Employee (name)\nSELECT * FROM Employee WHERE name = 'Ashish'", 
            "title": "1.2 Indexing"
        }, 
        {
            "location": "/database/#2-data-manipulation", 
            "text": "", 
            "title": "2. Data Manipulation"
        }, 
        {
            "location": "/database/#create-read-update-delete-6", 
            "text": "![][15]   Create or add new entries  Read, retrieve, search, or view existing entries * Update or edit existing entries * Delete/deactivate existing entries   /* create */\nCREATE TABLE Guests ( id INT(6) UNSIGNED AUTO_INCREMENT PRIMARY KEY, firstname VARCHAR(30) NOT NULL, lastname VARCHAR(30) NOT NULL, email VARCHAR(50), reg_date TIMESTAMP )\n/* create (insert) */\nINSERT INTO Guests (firstname, lastname, email) VALUES ('John', 'Doe', 'john@example.com')\n/* read */\nSELECT * FROM Guests WHERE id=1 /* update */ UPDATE Guests SET lastname='Doe' WHERE id=1\n/* delete */\nDELETE FROM Guests WHERE id=1`", 
            "title": "Create - Read - Update - Delete 6"
        }, 
        {
            "location": "/database/#3-data-retrieve-transaction", 
            "text": "", 
            "title": "3. Data Retrieve &amp; Transaction"
        }, 
        {
            "location": "/database/#31-data-retrieve", 
            "text": "SELECT ,  WHERE ,  FROM ,  LIMIT ,  JOIN ,  GROUP BY ,  HAVING  Get user id, user name and number of post of this user  SELECT user.id, user.name, COUNT(post.*) AS posts\nFROM user LEFT OUTER JOIN post ON post.owner_id=user.id GROUP BY user.id`  Select user who only order one time.  SELECT name, COUNT(name) AS c FROM orders GROUP BY name HAVING c = 1;  Calculate the longest period (in days) that the company has gone without a hiring or firing anyone.  SELECT x.date, MIN(y.date) y_date, DATEDIFF(MIN(y.date),x.date) days\nFROM ( SELECT hiredate date FROM employees UNION SELECT terminationdate FROM employees ) x\nJOIN ( SELECT hiredate date FROM employees UNION SELECT terminationdate FROM employees UNION SELECT CURDATE()) y\nON y.date   x.date GROUP BY x.date ORDER BY days DESC LIMIT 1;  Data Retrieve API     API  Description    get  get single item     Get dog by id  Dog.get(1)     find   find items  @see collection.find()      Find dog name \"Max\"   Dog.find({\"name\": \"Max\"})     sort   sort items  @see cursor.sort      Get 10 older dogs  Dog.find().sort(\"age\", {limit: 10})     aggregate   sum, min, max items  @see collection.aggregate      Get sum of dogs' age  Dog.find().aggregate({\n  \"sum_age\":  {\n     $sum: \"age\"\n   }\n})", 
            "title": "3.1 Data Retrieve"
        }, 
        {
            "location": "/database/#32-transaction", 
            "text": "A transaction symbolizes a unit of work performed within a database management system (or similar system) against a database, and treated in a coherent and reliable way independent of other transactions. A transaction generally represents any change in database. Example: Transfer 900$ from Account  Bob  to  Alice   7  start transaction\nselect balance from Account where Account_Number='Bob';\nselect balance from Account where Account_Number='Alice';\nupdate Account set balance=balance-900 here Account_Number='Bob' ;\nupdate Account set balance=balance+900 here Account_Number='Alice' ;\ncommit; //if all sql queries succed rollback; //if any of Sql queries failed or error  ACID Properties   8  In computer science, ACID (Atomicity, Consistency, Isolation, Durability) is a set of properties that guarantee that database transactions are processed reliably. In the context of databases, a single logical operation on the data is called a transaction.  For example, a transfer of funds from one bank account to another, even involving multiple changes such as debiting one account and crediting another, is a single transaction. ![][16]", 
            "title": "3.2 Transaction"
        }, 
        {
            "location": "/database/#446-backup-and-restore-9", 
            "text": "Sometimes it is desired to bring a database back to a previous state (for many reasons, e.g., cases when the database is found corrupted due to a software error, or if it has been updated with erroneous data). To achieve this a backup operation is done occasionally or continuously, where each desired database state (i.e., the values of its data and their embedding in database's data structures) is kept within dedicated backup files (many techniques exist to do this effectively). When this state is needed, i.e., when it is decided by a database administrator to bring the database back to this state (e.g., by specifying this state by a desired point in time when the database was in this state), these files are utilized to restore that state.", 
            "title": "4. Backup and Restore 9"
        }, 
        {
            "location": "/database/#546-migration-10", 
            "text": "In software engineering, schema migration (also database migration, database change management) refers to the management of incremental, reversible changes to relational database schemas. A schema migration is performed on a database whenever it is necessary to update or revert that database's schema to some newer or older version. Example: Android Migration by droid-migrate  11  droid-migrate init -d my_database droid-migrate generate up droid-migrate generate down  Example: Database Seeding with Laravel  12   shell php artisan migrate:make seed_roles_table php artisan migrate:make seed_users_table php artisan migrate:reset php artisan db:seed", 
            "title": "5. Migration 10"
        }, 
        {
            "location": "/database/#646-active-record-pattern-object-relational-mapping-orm-13", 
            "text": "Object-relational mapping in computer science is a programming technique for converting data between incompatible type systems in object-oriented programming languages. This creates, in effect, a \"virtual object database\" that can be used from within the programming language. There are both free and commercial packages available that perform object-relational mapping, although some programmers opt to create their own ORM tools.  ![][17]  Example  php   14  $employee = new Employee(); $employee- setName( Joe ); $employee- save();\n[/code]\n\n`Android`  sup id= fnref-2159-10 a href= #fn-2159-10  rel= footnote 15 /a /sup \n\n```java\npublic class User {\n  @DatabaseField(id = true) String username;\n  @DatabaseField String password;\n  @DatabaseField String email;\n  @DatabaseField String alias;\n  public User() {} }  Implementations   Android: [ormlite-android][18]  16  PHP: [Eloquent][19]   \n   Database schema \u00a0 \u21a9   \n   Data type \u00a0 \u21a9   \n   SQL Data Types for Various DBs \u00a0 \u21a9   \n   Cardinality (data modeling) \u00a0 \u21a9   \n   How MySQL Uses Indexes \u00a0 \u21a9   \n   Create, read, update and delete \u00a0 \u21a9   \n   Database Transaction Tutorial in SQL with Example for Beginners \u00a0 \u21a9   \n   ACID \u00a0 \u21a9   \n   Database \u00a0 \u21a9   \n   Schema migration \u00a0 \u21a9   \n   aglover/droid-migrate \u00a0 \u21a9   \n   Database Seeding with Laravel \u00a0 \u21a9   \n   Object-relational mapping \u00a0 \u21a9   \n   Object Relational Mapping in PHP \u00a0 \u21a9   \n   An Android Repository with ORMLite (Using an existing SQLite database) \u00a0 \u21a9   \n   5 of the Best Android ORMs \u00a0 \u21a9   \n   \n\n[1]: http://www.netsolutionsindia.com/blog/wp-content/uploads/2014/07/Mongodb-Nosql.jpg\n[2]: http://www.oracle.com/index.html\n[3]: http://www.mysql.com/\n[4]: http://sqlite.org/\n[5]: http://redis.io/\n[6]: http://memcached.org/\n[7]: https://www.mongodb.org/\n[8]: http://neo4j.com/\n[9]: http://cassandra.apache.org/\n[10]: http://hbase.apache.org/\n[11]: http://i.imgur.com/uEuEdPv.png\n[12]: http://i.stack.imgur.com/Z6tTL.gif\n[13]: http://cdn.guru99.com/images/Index.jpg\n[14]: http://image.slidesharecdn.com/mysqlindex-091118043907-phpapp02/95/indexing-the-mysql-index-key-to-performance-tuning-17-638.jpg?cb=1357187786\n[15]: https://www.pingidentity.com/content/dam/pic/images/glyphs/22_Capabilities_UserProvisioningDeprovisioning_b3_r.png\n[16]: https://lh6.googleusercontent.com/y9qoNuNGdd9COo0twXUrefyy6ZKmRs3iFPIMKpJ7UZRXqX7Bc5lXFutzaKLFf0ZPD4Sl7uDj1CvQoCh2kOd9ZNkKokw_-xZ-QUwX8mWkKDexO0I58Oo\n[17]: https://symfony-docs-chs.readthedocs.org/en/latest/_images/doctrine_image_1.png\n[18]: https://github.com/j256/ormlite-android\n[19]: http://laravel.com/docs/4.2/eloquent", 
            "title": "6. Active record pattern | Object-Relational Mapping (ORM) 13"
        }, 
        {
            "location": "/db_sql/", 
            "text": "SQL\n\n\n\n  SELECT * FROM WORLD\n\n\n\n\n\n\n\n  INSERT INTO\n\n\n\n\n\n\n\n\nSELECT * FROM girls", 
            "title": "SQL"
        }, 
        {
            "location": "/db_sql/#sql", 
            "text": "SELECT * FROM WORLD   \n  INSERT INTO    SELECT * FROM girls", 
            "title": "SQL"
        }, 
        {
            "location": "/db_mysql/", 
            "text": "MySQL\n\n\n\n\nMySQL is an open-source relational database management system (RDBMS); in July 2013, it was the world's second most widely used RDBMS, and the most widely used open-source client\u2013server model RDBMS. It is named after co-founder Michael Widenius's daughter, My. The SQL abbreviation stands for Structured Query Language. The MySQL development project has made its source code available under the terms of the GNU General Public License, as well as under a variety of proprietary agreements. MySQL was owned and sponsored by a single for-profit firm, the Swedish company MySQL AB, now owned by Oracle Corporation. For proprietary use, several paid editions are available, and offer additional functionality.\n\n\nMySQL: Docker\n\n\nDocker Run\n\n\ndocker pull mysql\ndocker run -d \\\n  -p 3306:3306 \\\n  --env MYSQL_ROOT_PASSWORD=docker \\\n  --env MYSQL_DATABASE=docker \\\n  --env MYSQL_USER=docker \\\n  --env MYSQL_PASSWORD=docker \\\n  mysql\n\n\n\n\nNote: On Windows, view your \n0.0.0.0\n IP by running below command line (or you can turn on Kitematic to view ip)\n\n\nDocker Compoose\n\n\nStep 1\n: Clone Docker Project\n\n\ngit clone https://github.com/magizbox/docker-mysql.git\nmv docker-mysql mysql\n\n\n\n\nStep 2\n: Docker Compose\n\n\nversion: \n2\n\n\nservices:\n mysql:\n  build: ./mysql/.\n  ports:\n   - 3306:3306\n  environment:\n   - MYSQL_ROOT_PASSWORD=docker\n   - MYSQL_DATABASE=docker\n   - MYSQL_USER=docker\n   - MYSQL_PASSWORD=docker\n  volumes:\n   - ./data/mysql:/var/lib/mysql\n\n\n\n\nDocker Folder\n\n\nmysql/\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my.cnf\n\u2514\u2500\u2500 Dockerfile\n\n\n\n\nVerify\n\n\ndocker-machine ls\nNAME      ACTIVE   DRIVER       STATE     URL                         SWARM\ndefault   *        virtualbox   Running   tcp://192.168.99.100:2376\n\n\n\n\nYou can add phpmyadmin to see mysql works\n\n\n phpmyadmin:\n  image: phpmyadmin/phpmyadmin\n  links:\n   - mysql\n  environment:\n   - PMA_ARBITRARY=1\n  ports:\n   - 80:80\n\n\n\n\nSee it works\n\n\n\n\nGo to localhost\n\n\nLogin with Server=mysql, Username=docker, Password=docker", 
            "title": "MySQL"
        }, 
        {
            "location": "/db_mysql/#mysql", 
            "text": "MySQL is an open-source relational database management system (RDBMS); in July 2013, it was the world's second most widely used RDBMS, and the most widely used open-source client\u2013server model RDBMS. It is named after co-founder Michael Widenius's daughter, My. The SQL abbreviation stands for Structured Query Language. The MySQL development project has made its source code available under the terms of the GNU General Public License, as well as under a variety of proprietary agreements. MySQL was owned and sponsored by a single for-profit firm, the Swedish company MySQL AB, now owned by Oracle Corporation. For proprietary use, several paid editions are available, and offer additional functionality.", 
            "title": "MySQL"
        }, 
        {
            "location": "/db_mysql/#mysql-docker", 
            "text": "", 
            "title": "MySQL: Docker"
        }, 
        {
            "location": "/db_mysql/#docker-run", 
            "text": "docker pull mysql\ndocker run -d \\\n  -p 3306:3306 \\\n  --env MYSQL_ROOT_PASSWORD=docker \\\n  --env MYSQL_DATABASE=docker \\\n  --env MYSQL_USER=docker \\\n  --env MYSQL_PASSWORD=docker \\\n  mysql  Note: On Windows, view your  0.0.0.0  IP by running below command line (or you can turn on Kitematic to view ip)", 
            "title": "Docker Run"
        }, 
        {
            "location": "/db_mysql/#docker-compoose", 
            "text": "Step 1 : Clone Docker Project  git clone https://github.com/magizbox/docker-mysql.git\nmv docker-mysql mysql  Step 2 : Docker Compose  version:  2 \n\nservices:\n mysql:\n  build: ./mysql/.\n  ports:\n   - 3306:3306\n  environment:\n   - MYSQL_ROOT_PASSWORD=docker\n   - MYSQL_DATABASE=docker\n   - MYSQL_USER=docker\n   - MYSQL_PASSWORD=docker\n  volumes:\n   - ./data/mysql:/var/lib/mysql", 
            "title": "Docker Compoose"
        }, 
        {
            "location": "/db_mysql/#docker-folder", 
            "text": "mysql/\n\u251c\u2500\u2500 config\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 my.cnf\n\u2514\u2500\u2500 Dockerfile", 
            "title": "Docker Folder"
        }, 
        {
            "location": "/db_mysql/#verify", 
            "text": "docker-machine ls\nNAME      ACTIVE   DRIVER       STATE     URL                         SWARM\ndefault   *        virtualbox   Running   tcp://192.168.99.100:2376  You can add phpmyadmin to see mysql works   phpmyadmin:\n  image: phpmyadmin/phpmyadmin\n  links:\n   - mysql\n  environment:\n   - PMA_ARBITRARY=1\n  ports:\n   - 80:80  See it works   Go to localhost  Login with Server=mysql, Username=docker, Password=docker", 
            "title": "Verify"
        }, 
        {
            "location": "/db_redis/", 
            "text": "Redis\n\n\n\n\nRedis is an open source (BSD licensed), in-memory data structure store, used as database, cache and message broker. \n1\n\n\nIt supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs and geospatial indexes with radius queries.\n\n\nRedis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.\n\n\nRedis: Client\n\n\nPython Client\n\n\npipy/redis\n\n\nInstallation\n\n\npip install redis\n\n\n\n\nUsage\n\n\nimport redis\nr = redis.StrictRedis(host='localhost', port=6379, db=0)\nr.set('foo', 'bar')\n-\n True\n\nr.get('foo')\n-\n 'bar'\n\nr.delete('foo')\n\n# after delete\nr.get('foo')\n-\n None\n\n\n\n\nJava Client\n\n\nhttps://redislabs.com/redis-java\n\n\nRedis: Docker\n\n\nDocker Run\n\n\ndocker run -d -p 6379:6379 redis\n\n\n\n\nDocker Compose\n\n\nversion: \n2\n\n\nservices:\n redis:\n  image: redis\n  ports:\n   - 6379:6379\n\n\n\n\n\n\n\n\n\n\n\n\nRedis.io", 
            "title": "Redis"
        }, 
        {
            "location": "/db_redis/#redis", 
            "text": "Redis is an open source (BSD licensed), in-memory data structure store, used as database, cache and message broker.  1  It supports data structures such as strings, hashes, lists, sets, sorted sets with range queries, bitmaps, hyperloglogs and geospatial indexes with radius queries.  Redis has built-in replication, Lua scripting, LRU eviction, transactions and different levels of on-disk persistence, and provides high availability via Redis Sentinel and automatic partitioning with Redis Cluster.", 
            "title": "Redis"
        }, 
        {
            "location": "/db_redis/#redis-client", 
            "text": "", 
            "title": "Redis: Client"
        }, 
        {
            "location": "/db_redis/#python-client", 
            "text": "pipy/redis  Installation  pip install redis  Usage  import redis\nr = redis.StrictRedis(host='localhost', port=6379, db=0)\nr.set('foo', 'bar')\n-  True\n\nr.get('foo')\n-  'bar'\n\nr.delete('foo')\n\n# after delete\nr.get('foo')\n-  None", 
            "title": "Python Client"
        }, 
        {
            "location": "/db_redis/#java-client", 
            "text": "https://redislabs.com/redis-java", 
            "title": "Java Client"
        }, 
        {
            "location": "/db_redis/#redis-docker", 
            "text": "", 
            "title": "Redis: Docker"
        }, 
        {
            "location": "/db_redis/#docker-run", 
            "text": "docker run -d -p 6379:6379 redis", 
            "title": "Docker Run"
        }, 
        {
            "location": "/db_redis/#docker-compose", 
            "text": "version:  2 \n\nservices:\n redis:\n  image: redis\n  ports:\n   - 6379:6379      Redis.io", 
            "title": "Docker Compose"
        }, 
        {
            "location": "/networking/", 
            "text": "Networking\n\n\nTCP/IP \n1\n\n\nTCP/IP is the protocol that has run the Internet for 30 years.\n\n\n\nHow TCP/IP works\n\n\n\n\nP2P\n\n\n\n\n\n\n\n\n\n\nHappy 30th Anniversary, Internet and TCP/IP!!!", 
            "title": "Networking"
        }, 
        {
            "location": "/networking/#networking", 
            "text": "", 
            "title": "Networking"
        }, 
        {
            "location": "/networking/#tcpip-1", 
            "text": "TCP/IP is the protocol that has run the Internet for 30 years.  How TCP/IP works", 
            "title": "TCP/IP 1"
        }, 
        {
            "location": "/networking/#p2p", 
            "text": "Happy 30th Anniversary, Internet and TCP/IP!!!", 
            "title": "P2P"
        }, 
        {
            "location": "/os/", 
            "text": "Operating System\n\n\n\n\nAn operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs. The operating system is a component of the system software in a computer system. Application programs usually require an operating system to function.\n\n\n\n\nCommon Features\n\n\n\n\nIO: File Operations\n\n\nSecurity: User Environments\n\n\nNetwork Operations\n\n\nProcess Manager\n\n\nSystem Information\n\n\nText Processing \n Pipeline\n\n\nDevice Manager", 
            "title": "Introduction"
        }, 
        {
            "location": "/os/#operating-system", 
            "text": "An operating system (OS) is system software that manages computer hardware and software resources and provides common services for computer programs. The operating system is a component of the system software in a computer system. Application programs usually require an operating system to function.   Common Features   IO: File Operations  Security: User Environments  Network Operations  Process Manager  System Information  Text Processing   Pipeline  Device Manager", 
            "title": "Operating System"
        }, 
        {
            "location": "/os_linux/", 
            "text": "Please visit \nlinux tutorial page", 
            "title": "Linux"
        }, 
        {
            "location": "/os_centos/", 
            "text": "CentOS 6.5\n\n\nVMWare\n\n\nNetworking\n\n\nRemote Desktop\n\n\nInstall XRDP Remote Desktop to CentOS 6.5\n\n\nRHEL/CentOS 6 32-Bit\n\n\nwget http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\nrpm -ivh epel-release-6-8.noarch.rpm\n\n\n\n\nRHEL/CentOS 6 64-Bit\n\n\nwget http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\nrpm -ivh epel-release-6-8.noarch.rpm\n\n\n\n\nInstall tigervnc\n\n\nyum install xrdp tigervnc-server\nservice vncserver start\nservice xrdp start\nservice iptables stop\nchkconfig iptables off\nchkconfig xrdp on\nchkconfig vncserver on\n\n\n\n\nConfig control to other users\n\n\nSystem\n \n \nPreferences\n \n \nRemote Desktop\n\n\n\n\nFirewall\n\n\n# start firewall\nsystemctl start firewalld\n# stop firewall\nsystemctl stop firewalld\n# disable firewall\nsystemctl disable firewalld\n# check status\nsystemctl status firewalld\n\n\n\n\nDevelopment Tools\n\n\n\nInstall\n\n\nyum clean all\nyum groupinstall \nquot;Development tools\nquot;\n\n\n\n\n\n  Warning: CentOS 6 is not support for docker\n\n\n\n\nStatic IP\n\n\n## Configure eth0\n#\n# vi /etc/sysconfig/network-scripts/ifcfg-eth0\n\nDEVICE=\neth0\n\nNM_CONTROLLED=\nyes\n\nONBOOT=yes\nHWADDR=A4:BA:DB:37:F1:04\nTYPE=Ethernet\nBOOTPROTO=static\nNAME=\nSystem eth0\n\nUUID=5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03\nIPADDR=192.168.1.44\nNETMASK=255.255.255.0\n\n\n## Configure Default Gateway\n#\n# vi /etc/sysconfig/network\n\nNETWORKING=yes\nHOSTNAME=centos6\nGATEWAY=192.168.1.1\n\n\n## Restart Network Interface\n#\n\n/etc/init.d/network restart\n\n## Configure DNS Server\n#\n# vi /etc/resolv.conf\n\nnameserver 8.8.8.8      # Replace with your nameserver ip\nnameserver 192.168.1.1  # Replace with your nameserver ip\n\n\n\n\nCentOS 7\n\n\nRemote Desktop \n1\n\n\n\n# add repository rpms\nrpm -Uvh https://dl.fedoraproject.org/pub/epel/7/x86_64/e/epel-release-7-5.noarch.rpm\nrpm -Uvh http://li.nux.ro/download/nux/dextop/el7/x86_64/nux-dextop-release-0-1.el7.nux.noarch.rpm\n\n# install xrdp\nyum -y install xrdp tigervnc-server\n\n# start and enable xrdp service\nsystemctl start xrdp.service\nsystemctl enable xrdp.service\n\n# add firewall rules\nfirewall-cmd --permanent --zone=public --add-port=3389/tcp\nfirewall-cmd --reload\n\n# Configure SELinux\nchcon --type=bin_t /usr/sbin/xrdp\nchcon --type=bin_t /usr/sbin/xrdp-sesman\n\n\n\n\nDevelopment Tools\n\n\n\nInstall\n\n\nyum clean all\nyum groupinstall \nquot;Development tools\nquot;\n\n\n\n\nInstall Docker \n2\n\n\n\n# install docker\nyum -y update\nyum -y install docker docker-registry\n\n# start docker\nsystemctl enable docker.service\nsystemctl start docker.service\nsystemctl status docker.service\n\n\n\n\n\n\n\n\n\n\n\n\n\nInstall xrdp on CentOS 7 / RHEL 7\n\n\n\n\n\n\n\nHow To Install Docker on CentOS 7\n\n\n\n\n\n\n\n\n\n\nTeamviewer\n\n\n# get teamviewer id\nteamviewer --info\n\n\n\n\n\n\nYou can open teamviewer with normal user in host computer\n\n\nYou can connect with root user\n\n\n\n\n\n\nPlease Patient when connect to CentOS. HE IS JUST SLOW.\n\n\n\n\nInstallation\n\n\nStep 1: Open Terminal (Applications \u2014\u2014\n Utilities \u2014\u2014\n Terminal).\n\n\nStep 2: Switch to root user.\n\n\nStep 3: Install the prerequisites.\n\n\n# yum install glibc alsa-lib freetype libICE libSM libX11 libXau libXdamage libXext libXfixes libXi libXrandr libXrender libXtst libgcc libuuid libxcb zlib\n\n\n\n\nStep 4: Install TeamViewer.\n\n\n# wget http://download.teamviewer.com/download/teamviewer.i686.rpm\n# yum install teamviewer.i686.rpm\n\n\n\n\nStep 5: Start TeamViewer (Application \u2013\n Internet \u2013\n TeamViewer)\n\n\nInstall Pycharm\n\n\nStep 1. Open Terminal Window\n\n\nStep 2. Download PyCharm for Linux in : \nJetBrain\n\n\nStep 3. From Command Line:\n\n\ntar xvzf pycharm*.tar.gz -C /tmp/\n\n\n\n\nStep 4. Relocating PyCharm\n\n\nsudo su -c \nchown -R root:root /tmp/pycharm*\n\nsudo mv /tmp/pycharm-* /opt/pycharm-*\n\n\n\n\nStep 5. Making PyCharm Symlinks\n\n\nsudo su -c \nln -s /opt/pycharm-community/bin/pycharm.sh /usr/local/bin/pycharm\n\nsudo su -c \nln -s /opt/pycharm-community/bin/inspect.sh /usr/local/bin/inspect\n\n\n\n\n\nStep 6. Launching PyCharm Python IDE\n\n\npycharm", 
            "title": "CentOS"
        }, 
        {
            "location": "/os_centos/#centos-65", 
            "text": "", 
            "title": "CentOS 6.5"
        }, 
        {
            "location": "/os_centos/#vmware", 
            "text": "", 
            "title": "VMWare"
        }, 
        {
            "location": "/os_centos/#networking", 
            "text": "", 
            "title": "Networking"
        }, 
        {
            "location": "/os_centos/#remote-desktop", 
            "text": "Install XRDP Remote Desktop to CentOS 6.5  RHEL/CentOS 6 32-Bit  wget http://download.fedoraproject.org/pub/epel/6/i386/epel-release-6-8.noarch.rpm\nrpm -ivh epel-release-6-8.noarch.rpm  RHEL/CentOS 6 64-Bit  wget http://download.fedoraproject.org/pub/epel/6/x86_64/epel-release-6-8.noarch.rpm\nrpm -ivh epel-release-6-8.noarch.rpm  Install tigervnc  yum install xrdp tigervnc-server\nservice vncserver start\nservice xrdp start\nservice iptables stop\nchkconfig iptables off\nchkconfig xrdp on\nchkconfig vncserver on  Config control to other users  System     Preferences     Remote Desktop", 
            "title": "Remote Desktop"
        }, 
        {
            "location": "/os_centos/#firewall", 
            "text": "# start firewall\nsystemctl start firewalld\n# stop firewall\nsystemctl stop firewalld\n# disable firewall\nsystemctl disable firewalld\n# check status\nsystemctl status firewalld", 
            "title": "Firewall"
        }, 
        {
            "location": "/os_centos/#static-ip", 
            "text": "## Configure eth0\n#\n# vi /etc/sysconfig/network-scripts/ifcfg-eth0\n\nDEVICE= eth0 \nNM_CONTROLLED= yes \nONBOOT=yes\nHWADDR=A4:BA:DB:37:F1:04\nTYPE=Ethernet\nBOOTPROTO=static\nNAME= System eth0 \nUUID=5fb06bd0-0bb0-7ffb-45f1-d6edd65f3e03\nIPADDR=192.168.1.44\nNETMASK=255.255.255.0\n\n\n## Configure Default Gateway\n#\n# vi /etc/sysconfig/network\n\nNETWORKING=yes\nHOSTNAME=centos6\nGATEWAY=192.168.1.1\n\n\n## Restart Network Interface\n#\n\n/etc/init.d/network restart\n\n## Configure DNS Server\n#\n# vi /etc/resolv.conf\n\nnameserver 8.8.8.8      # Replace with your nameserver ip\nnameserver 192.168.1.1  # Replace with your nameserver ip", 
            "title": "Static IP"
        }, 
        {
            "location": "/os_centos/#centos-7", 
            "text": "", 
            "title": "CentOS 7"
        }, 
        {
            "location": "/os_centos/#teamviewer", 
            "text": "# get teamviewer id\nteamviewer --info   You can open teamviewer with normal user in host computer  You can connect with root user    Please Patient when connect to CentOS. HE IS JUST SLOW.   Installation  Step 1: Open Terminal (Applications \u2014\u2014  Utilities \u2014\u2014  Terminal).  Step 2: Switch to root user.  Step 3: Install the prerequisites.  # yum install glibc alsa-lib freetype libICE libSM libX11 libXau libXdamage libXext libXfixes libXi libXrandr libXrender libXtst libgcc libuuid libxcb zlib  Step 4: Install TeamViewer.  # wget http://download.teamviewer.com/download/teamviewer.i686.rpm\n# yum install teamviewer.i686.rpm  Step 5: Start TeamViewer (Application \u2013  Internet \u2013  TeamViewer)", 
            "title": "Teamviewer"
        }, 
        {
            "location": "/os_centos/#install-pycharm", 
            "text": "", 
            "title": "Install Pycharm"
        }, 
        {
            "location": "/os_centos/#step-1-open-terminal-window", 
            "text": "", 
            "title": "Step 1. Open Terminal Window"
        }, 
        {
            "location": "/os_centos/#step-2-download-pycharm-for-linux-in-jetbrain", 
            "text": "", 
            "title": "Step 2. Download PyCharm for Linux in : JetBrain"
        }, 
        {
            "location": "/os_centos/#step-3-from-command-line", 
            "text": "tar xvzf pycharm*.tar.gz -C /tmp/", 
            "title": "Step 3. From Command Line:"
        }, 
        {
            "location": "/os_centos/#step-4-relocating-pycharm", 
            "text": "sudo su -c  chown -R root:root /tmp/pycharm* \nsudo mv /tmp/pycharm-* /opt/pycharm-*", 
            "title": "Step 4. Relocating PyCharm"
        }, 
        {
            "location": "/os_centos/#step-5-making-pycharm-symlinks", 
            "text": "sudo su -c  ln -s /opt/pycharm-community/bin/pycharm.sh /usr/local/bin/pycharm \nsudo su -c  ln -s /opt/pycharm-community/bin/inspect.sh /usr/local/bin/inspect", 
            "title": "Step 5. Making PyCharm Symlinks"
        }, 
        {
            "location": "/os_centos/#step-6-launching-pycharm-python-ide", 
            "text": "pycharm", 
            "title": "Step 6. Launching PyCharm Python IDE"
        }, 
        {
            "location": "/os_ubuntu/", 
            "text": "Apps\n\n\nIntellIJ\n\n\n\n\n\n\n\nInstall git\n\n\napt-get install -y git\n\n\n\n\nGUI `ubuntu-desktop\n\n\napt-get install ubuntu-desktop\n\n\n\n\nThen restart computer, ubuntu-desktop will run in the next login.\n\n\nInstall IntellIJ in ubuntu\n\n\nDownloads intellij\n\n\nhttps://www.jetbrains.com/idea/download/\n\n\n\n\nCreate Ubuntu desktop launcher\n\n\nrun intellij : cd to folder intellij\n\n\ncd file://path intellij/idea.sh\n\n\n\n\nCreate Ubuntu desktop\n\n\nTools \n Create Desktop Entry\n\n\n\n\nInstall Pycharm on Ubuntu\n\n\nStep 1. To add the PPA, open terminal from the Dash, Launcher, or via Ctrl+Alt+T shortcut keys. When it opens, run command:\n\n\nsudo add-apt-repository ppa:mystic-mirage/pycharm\n\n\n\n\nStep 2. After adding the PPA, update system package cache and install the IDE via Synaptic Package Manager. Or just run below commands one by one in terminal:\n\n\nsudo apt-get update\n\nsudo apt-get install pycharm\n\n\n\n\nStep 3. After finishing the installation, start Pycharm. It will prompt you to activate with license, choose the \nLicense Server\n checkbox and copy below row to it:\n\n\nhttp://idea.qinxi1992.cn", 
            "title": "Ubuntu"
        }, 
        {
            "location": "/os_ubuntu/#apps", 
            "text": "IntellIJ", 
            "title": "Apps"
        }, 
        {
            "location": "/os_ubuntu/#install-git", 
            "text": "apt-get install -y git", 
            "title": "Install git"
        }, 
        {
            "location": "/os_ubuntu/#gui-ubuntu-desktop", 
            "text": "apt-get install ubuntu-desktop  Then restart computer, ubuntu-desktop will run in the next login.", 
            "title": "GUI `ubuntu-desktop"
        }, 
        {
            "location": "/os_ubuntu/#install-intellij-in-ubuntu", 
            "text": "", 
            "title": "Install IntellIJ in ubuntu"
        }, 
        {
            "location": "/os_ubuntu/#downloads-intellij", 
            "text": "https://www.jetbrains.com/idea/download/", 
            "title": "Downloads intellij"
        }, 
        {
            "location": "/os_ubuntu/#create-ubuntu-desktop-launcher", 
            "text": "run intellij : cd to folder intellij  cd file://path intellij/idea.sh  Create Ubuntu desktop  Tools   Create Desktop Entry", 
            "title": "Create Ubuntu desktop launcher"
        }, 
        {
            "location": "/os_ubuntu/#install-pycharm-on-ubuntu", 
            "text": "Step 1. To add the PPA, open terminal from the Dash, Launcher, or via Ctrl+Alt+T shortcut keys. When it opens, run command:  sudo add-apt-repository ppa:mystic-mirage/pycharm  Step 2. After adding the PPA, update system package cache and install the IDE via Synaptic Package Manager. Or just run below commands one by one in terminal:  sudo apt-get update\n\nsudo apt-get install pycharm  Step 3. After finishing the installation, start Pycharm. It will prompt you to activate with license, choose the  License Server  checkbox and copy below row to it:  http://idea.qinxi1992.cn", 
            "title": "Install Pycharm on Ubuntu"
        }, 
        {
            "location": "/os_windows/", 
            "text": "1. File Operations\n\n\n2. User Environments\n\n\n3. Network Operations\n\n\n3.1 SSH\n\n\nSSH Secure Shell Client (homepage, \ndownload\n)\n\n\n3.2 RTMP\n\n\nrtmpdump (\ndownload\n)\n\n\n3.3 Synchonize\n\n\nFullSync (\nhomepage\n)\n\n\n\n\n4. Process\n\n\n# list process\ntasklist\n\n# kill prcess\ntaskkill /im chrome.exe /F\n\n\n\n\n5. System Information\n\n\n# get architecture\nwmic os get osarchitecture\n#: OSArchitecture\n#: 64-bit\n\n\n\n\n\nDownload Windows 7 Professional 64 bit: https://drive.google.com/folderview?id=0B3PWckYm7eLkZS1pVHloNzdrTFk\n=sharing#list\n\n\n\n\nWindows Shell\n\n\nBatsh - A language that compiles to Bash and Windows Batch\n\n\nPrint\n\n\n# print HELLO WORLD\necho HELLO WORLD\n\n# print blank line\necho.\n\n\n\n\nArguments \n3\n\n\necho %1\n\n\n\n\n\n\n$ test.bat helloworld\nhelloworld\n\n\n\n\nSleep\n\n\nSleep for 5 seconds \n1\n\n\ntimeout 5 \n NUL\n\n# deprecated\nping 127.0.0.1 -n 6 \n nul\n\n\n\n\nConditional \n4\n\n\nif exist input.dat goto handle_input_file\n    echo The file input.dat does not exist\n    pause\n    exit /b\n:handle_input_file\n\n\n\n\nLoop \n2\n\n\n:while1\necho forever loop\ngoto :while1\n\n\n\n\n\n\n$ test.bat\nforever loop\nforever loop\nforever loop\n...\n\n\n\n\nWindows: How to fix MBR\n\n\nFix MBR with command prompt and installation DVD. Fix MBR with command prompt requires the original Windows 8 or 8.1 installation DVD. The instructions are \n1\n\n\n1.Boot from the original installation DVD.\n2.At the Welcome screen, click \"Repair your computer\".\n3.Choose\" Troubleshoot \n Advanced options \n Command Prompt\".\n4.When the Command Prompt loads, type the following commands in order:\n\n\nbootrec /FixMbr\nbootrec /FixBoot\nbootrec /ScanOs\nbootrec /RebuildBcd\n\n\n\n\nRemember to press \"Enter\" after each command and wait for each operation to finish.\n\n\n5.Remove the DVD from the disk tray.\n6.Type exit and Hit \"Enter\".\n7.Restart your computer and check if Windows 8/8.1 can boot now.\n\n\nInstalling Theano on Windows 8.1\n\n\nGetting\u00a0theano works in Windows 8.1 is not easy but possible. The important is use the right receipts. I found the right receipts and nice tutorial \nhere\n\n\nReceipts\n\n\n\n\nWindows 8.1 64-bit\n\n\nCUDA 64-bit 7\n\n\nVisual Studio 2013 (compiler 12.0) Ultimate\n\n\nAnaconda 64-bit 2.1.0\n\n\nGit-scm\n\n\n\n\n\nI'm very happy getting things done.\n\n\nPS C:Usersrain\n python\nPython 2.7.8 |Anaconda 2.1.0 (64-bit)| (default, Jul 2 2014, 15:12:11) [MSC v.1500 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://binstar.org\n\n import theano\nDEBUG: nvcc STDOUT mod.cu\nCreating library C:/Users/rain/AppData/Local/Theano/compiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_\n3_GenuineIntel-2.7.8-64/cuda_ndarray/cuda_ndarray.lib and object C:/Users/rain/AppData/Local/Theano/compiledir_Windows-8\n-6.2.9200-Intel64_Family_6_Model_60_Stepping_3_GenuineIntel-2.7.8-64/cuda_ndarray/cuda_ndarray.exp\n\nUsing gpu device 0: GeForce GTX 980\nDEBUG: nvcc STDOUT mod.cu\nCreating library C:/Users/rain/AppData/Local/Theano/compiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_\n3_GenuineIntel-2.7.8-64/tmpgt3iqm/c8d7bd33dfef61705c2854dd1f0cb7ce.lib and object C:/Users/rain/AppData/Local/Theano/com\npiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_3_GenuineIntel-2.7.8-64/tmpgt3iqm/c8d7bd33dfef61705c2854dd\n1f0cb7ce.exp\n\nDEBUG: nvcc STDOUT mod.cu\nCreating library C:/Users/rain/AppData/Local/Theano/compiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_\n3_GenuineIntel-2.7.8-64/tmpfab1so/0fc80e98cce631ecaa526b69dd28dae1.lib and object C:/Users/rain/AppData/Local/Theano/com\npiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_3_GenuineIntel-2.7.8-64/tmpfab1so/0fc80e98cce631ecaa526b69\ndd28dae1.exp\n\n\n\n\n\n\n\n\n\n\n\nWindows MBR fix\n\n\n\n\n\n\nWhile loop in batch\n\n\n\n\n\n\nCommand line parameters\n\n\n\n\n\n\nWindows Batch Files for Fun and Profit", 
            "title": "Windows"
        }, 
        {
            "location": "/os_windows/#1-file-operations", 
            "text": "", 
            "title": "1. File Operations"
        }, 
        {
            "location": "/os_windows/#2-user-environments", 
            "text": "", 
            "title": "2. User Environments"
        }, 
        {
            "location": "/os_windows/#3-network-operations", 
            "text": "", 
            "title": "3. Network Operations"
        }, 
        {
            "location": "/os_windows/#31-ssh", 
            "text": "SSH Secure Shell Client (homepage,  download )", 
            "title": "3.1 SSH"
        }, 
        {
            "location": "/os_windows/#32-rtmp", 
            "text": "rtmpdump ( download )", 
            "title": "3.2 RTMP"
        }, 
        {
            "location": "/os_windows/#33-synchonize", 
            "text": "FullSync ( homepage )", 
            "title": "3.3 Synchonize"
        }, 
        {
            "location": "/os_windows/#4-process", 
            "text": "# list process\ntasklist\n\n# kill prcess\ntaskkill /im chrome.exe /F", 
            "title": "4. Process"
        }, 
        {
            "location": "/os_windows/#5-system-information", 
            "text": "# get architecture\nwmic os get osarchitecture\n#: OSArchitecture\n#: 64-bit  \nDownload Windows 7 Professional 64 bit: https://drive.google.com/folderview?id=0B3PWckYm7eLkZS1pVHloNzdrTFk =sharing#list", 
            "title": "5. System Information"
        }, 
        {
            "location": "/os_windows/#windows-shell", 
            "text": "Batsh - A language that compiles to Bash and Windows Batch", 
            "title": "Windows Shell"
        }, 
        {
            "location": "/os_windows/#print", 
            "text": "# print HELLO WORLD\necho HELLO WORLD\n\n# print blank line\necho.", 
            "title": "Print"
        }, 
        {
            "location": "/os_windows/#arguments-3", 
            "text": "echo %1   $ test.bat helloworld\nhelloworld", 
            "title": "Arguments 3"
        }, 
        {
            "location": "/os_windows/#sleep", 
            "text": "Sleep for 5 seconds  1  timeout 5   NUL\n\n# deprecated\nping 127.0.0.1 -n 6   nul", 
            "title": "Sleep"
        }, 
        {
            "location": "/os_windows/#conditional-4", 
            "text": "if exist input.dat goto handle_input_file\n    echo The file input.dat does not exist\n    pause\n    exit /b\n:handle_input_file", 
            "title": "Conditional 4"
        }, 
        {
            "location": "/os_windows/#loop-2", 
            "text": ":while1\necho forever loop\ngoto :while1   $ test.bat\nforever loop\nforever loop\nforever loop\n...", 
            "title": "Loop 2"
        }, 
        {
            "location": "/os_windows/#windows-how-to-fix-mbr", 
            "text": "Fix MBR with command prompt and installation DVD. Fix MBR with command prompt requires the original Windows 8 or 8.1 installation DVD. The instructions are  1  1.Boot from the original installation DVD.\n2.At the Welcome screen, click \"Repair your computer\".\n3.Choose\" Troubleshoot   Advanced options   Command Prompt\".\n4.When the Command Prompt loads, type the following commands in order:  bootrec /FixMbr\nbootrec /FixBoot\nbootrec /ScanOs\nbootrec /RebuildBcd  Remember to press \"Enter\" after each command and wait for each operation to finish.  5.Remove the DVD from the disk tray.\n6.Type exit and Hit \"Enter\".\n7.Restart your computer and check if Windows 8/8.1 can boot now.", 
            "title": "Windows: How to fix MBR"
        }, 
        {
            "location": "/os_windows/#installing-theano-on-windows-81", 
            "text": "Getting\u00a0theano works in Windows 8.1 is not easy but possible. The important is use the right receipts. I found the right receipts and nice tutorial  here  Receipts   Windows 8.1 64-bit  CUDA 64-bit 7  Visual Studio 2013 (compiler 12.0) Ultimate  Anaconda 64-bit 2.1.0  Git-scm   I'm very happy getting things done.  PS C:Usersrain  python\nPython 2.7.8 |Anaconda 2.1.0 (64-bit)| (default, Jul 2 2014, 15:12:11) [MSC v.1500 64 bit (AMD64)] on win32\nType \"help\", \"copyright\", \"credits\" or \"license\" for more information.\nAnaconda is brought to you by Continuum Analytics.\nPlease check out: http://continuum.io/thanks and https://binstar.org  import theano\nDEBUG: nvcc STDOUT mod.cu\nCreating library C:/Users/rain/AppData/Local/Theano/compiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_\n3_GenuineIntel-2.7.8-64/cuda_ndarray/cuda_ndarray.lib and object C:/Users/rain/AppData/Local/Theano/compiledir_Windows-8\n-6.2.9200-Intel64_Family_6_Model_60_Stepping_3_GenuineIntel-2.7.8-64/cuda_ndarray/cuda_ndarray.exp\n\nUsing gpu device 0: GeForce GTX 980\nDEBUG: nvcc STDOUT mod.cu\nCreating library C:/Users/rain/AppData/Local/Theano/compiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_\n3_GenuineIntel-2.7.8-64/tmpgt3iqm/c8d7bd33dfef61705c2854dd1f0cb7ce.lib and object C:/Users/rain/AppData/Local/Theano/com\npiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_3_GenuineIntel-2.7.8-64/tmpgt3iqm/c8d7bd33dfef61705c2854dd\n1f0cb7ce.exp\n\nDEBUG: nvcc STDOUT mod.cu\nCreating library C:/Users/rain/AppData/Local/Theano/compiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_\n3_GenuineIntel-2.7.8-64/tmpfab1so/0fc80e98cce631ecaa526b69dd28dae1.lib and object C:/Users/rain/AppData/Local/Theano/com\npiledir_Windows-8-6.2.9200-Intel64_Family_6_Model_60_Stepping_3_GenuineIntel-2.7.8-64/tmpfab1so/0fc80e98cce631ecaa526b69\ndd28dae1.exp      Windows MBR fix    While loop in batch    Command line parameters    Windows Batch Files for Fun and Profit", 
            "title": "Installing Theano on Windows 8.1"
        }, 
        {
            "location": "/ux/", 
            "text": "1. Design Principles\n\n\nUI Design Do\u2019s and Don\u2019ts\n\n\nAndroid Design Principles\n\n\n2. Design Trends\n\n\n2.1 Material Design \n1\n\n\ncomponents\n\n\n\n\nWe challenged ourselves to create a visual language for our users that synthesizes the classic principles of good design with the innovation and possibility of technology and science. This is material design. This spec is a living document that will be updated as we continue to develop the tenets and specifics of material design.\n\n\n\n\n\n\nTools\n\n\n\n\nmaterialpalette.com\n\n\nIcon: fa2png\n\n\n\n\nUI Components\n\n\n\n\nData Binding\n\n\nTransclusion\n\n\nDirective - Fragments\n\n\nMessaging\n\n\nIntent \nAndroid\n \n1\n\n\nIntents are asynchronous messages which allow application components to request functionality from other Android components. Intents allow you to interact with components from the same applications as well as with components contributed by other applications. For example, an activity can start an external activity for taking a picture.\n\n\nIntents are objects of the android.content.Intent type. Your code can send them to the Android system defining the components you are targeting. For example, via the startActivity() method you can define that the intent should be used to start an activity.\n\n\nAn intent can contain data via a Bundle. This data can be used by the receiving component.\n\n\nStyle \n Theme\n\n\nAndroid Development: Explaining Styles and Themes, https://m.youtube.com/#/watch?v=MXpG3Xq0w3A\n\n\nResponsive Design\n\n\nSupport Multi Screen \n2\n\n\n\n\n\n\n\n\n\n\nIntent Android\n\n\n\n\n\n\nSupport Multi Screen", 
            "title": "UX/UI"
        }, 
        {
            "location": "/ux/#1-design-principles", 
            "text": "UI Design Do\u2019s and Don\u2019ts  Android Design Principles", 
            "title": "1. Design Principles"
        }, 
        {
            "location": "/ux/#2-design-trends", 
            "text": "", 
            "title": "2. Design Trends"
        }, 
        {
            "location": "/ux/#21-material-design-1", 
            "text": "components   We challenged ourselves to create a visual language for our users that synthesizes the classic principles of good design with the innovation and possibility of technology and science. This is material design. This spec is a living document that will be updated as we continue to develop the tenets and specifics of material design.    Tools   materialpalette.com  Icon: fa2png", 
            "title": "2.1 Material Design 1"
        }, 
        {
            "location": "/ux/#ui-components", 
            "text": "", 
            "title": "UI Components"
        }, 
        {
            "location": "/ux/#data-binding", 
            "text": "", 
            "title": "Data Binding"
        }, 
        {
            "location": "/ux/#transclusion", 
            "text": "Directive - Fragments", 
            "title": "Transclusion"
        }, 
        {
            "location": "/ux/#messaging", 
            "text": "Intent  Android   1  Intents are asynchronous messages which allow application components to request functionality from other Android components. Intents allow you to interact with components from the same applications as well as with components contributed by other applications. For example, an activity can start an external activity for taking a picture.  Intents are objects of the android.content.Intent type. Your code can send them to the Android system defining the components you are targeting. For example, via the startActivity() method you can define that the intent should be used to start an activity.  An intent can contain data via a Bundle. This data can be used by the receiving component.", 
            "title": "Messaging"
        }, 
        {
            "location": "/ux/#style-theme", 
            "text": "Android Development: Explaining Styles and Themes, https://m.youtube.com/#/watch?v=MXpG3Xq0w3A", 
            "title": "Style &amp; Theme"
        }, 
        {
            "location": "/ux/#responsive-design", 
            "text": "Support Multi Screen  2      Intent Android    Support Multi Screen", 
            "title": "Responsive Design"
        }, 
        {
            "location": "/software_architecture/", 
            "text": "Service-Oriented Architecture\n\n\nA service-oriented architecture (SOA) is an architectural pattern in computer software design in which application components provide services to other components via a communications protocol, typically over a network. The principles of service-orientation are independent of any vendor, product or technology. \n2\n\n\n\n\nGenerally accepted view \n1\n\n\n\n\nBoundaries are explicit\n\n\nServices are autonomous\n\n\nServices share schema and contract, not class\n\n\nService compatibility is based on policy\n\n\n\n\nMicroservices\n\n\n\n\nIn computing, microservices is a software architecture style in which complex applications are composed of small, independent processes communicating with each other using language-agnostic APIs. These services are small building blocks, highly decoupled and focussed on doing a small task, facilitating a modular approach to system-building. One of concepts which integrates microservices as a software architecture style is dew computing. \n1\n\n\n\n\n\n\nProperties \n2\n\n\n\n\nEach running in its own process\n\n\nCommunicating with lightweight mechanisms, often an \nHTTP resource API\n\n\nBuild around \nbusiness capabilities\n\n\nIndependently deployable\n\n\nfully automated\n deployment\n\n\nMaybe in a \ndifferent programming language\n and use \ndifferent data storage\n technologies\n\n\n\n\nMonolith vs Microservice\n\n\n\n\n\n\nMonolith\n\n\nMicroservice\n\n\n\n\n\n\nSimplicity\n\n\nPartial Deployment\n\n\n\n\n\n\nConsistency\n\n\nAvailability\n\n\n\n\n\n\nInter-module refactoring\n\n\nPreserve Modularity\n\n\n\n\n\n\n\n\nMultiple Platforms\n\n\n\n\n\n\n\nBenefits \n4\n\n\n\n\nTheir small size enables developers to be most productive.\n\n\nIt's easy to comprehend and test each service.\n\n\nYou can correctly handle failure of any dependent service.\n\n\nThey reduce impact of correlated failures.\n\n\n\n\nWeb Service\n\n\nRESTful API\n\n\n\n\nREST Client\n\n\nSense (Beta)\n\n\nA JSON aware developer console to ElasticSearch.\n\n\nAPI Document and Client Generator\n\n\nhttp://swagger.io/swagger-editor/\n\n\nAPI Client\n\n\nCRUD Pet\n\n\n\n\n\n\n\n\nAPI\n\n\nClient\n\n\n\n\n\n\nMethod\n\n\nURL\n\n\nBody\n\n\nReturn Body\n\n\nMethod\n\n\n\n\n\n\nGET\n\n\n/pets\n\n\n\n\n[Pet]\n\n\nPetApi.list()\n\n\n\n\n\n\nPOST\n\n\n/pets/\n\n\nPet\n\n\nPet\n\n\nPetApi.create(pet)\n\n\n\n\n\n\nGET\n\n\n/pets/pet_id\n\n\n\n\nPet\n\n\nPetApi.get(pet_id)\n\n\n\n\n\n\nPUT\n\n\n/pets/pet_id\n\n\nPet\n\n\nPet\n\n\nPetApi.update(pet_id, pet)\n\n\n\n\n\n\nDELETE\n\n\n/pets/pet_id\n\n\n\n\n\n\nPetApi.delete(pet_id)\n\n\n\n\n\n\n\n\n\n\n\n\nCRUD Store\n\n\n\n\n\n\n\n\nGET /stores\n\n\nStoreApi.list()\n\n\n\n\n\n\n...\n\n\n...\n\n\n\n\n\n\n\n\n\nRelationships\n\n\nMany to many\n\n\n\n\n\n\n\n\nGET /stores/sotre_id/pets\n\n\nStoreApi.get_pets(store_id)\n\n\n\n\n\n\n### Example\n\n[https://api.facebook.com/method/links.getStats?urls=%%URL%%\n=json](https://api.facebook.com/method/links.getStats?urls=%%URL%%\n=json)\n\n\n\n\n\n\n\n\n\n\n\n\nMicroservices\n\n\n\n\n\n\nSlide 11/42, Micro-servies\n\n\n\n\n\n\nMartin Fowler, Microservices, youtube\n\n\n\n\n\n\nRick E. Osowski, Microservices in action, Part 1: Introduction to microservices, IBM developerworks", 
            "title": "SA"
        }, 
        {
            "location": "/software_architecture/#service-oriented-architecture", 
            "text": "A service-oriented architecture (SOA) is an architectural pattern in computer software design in which application components provide services to other components via a communications protocol, typically over a network. The principles of service-orientation are independent of any vendor, product or technology.  2", 
            "title": "Service-Oriented Architecture"
        }, 
        {
            "location": "/software_architecture/#generally-accepted-view-1", 
            "text": "Boundaries are explicit  Services are autonomous  Services share schema and contract, not class  Service compatibility is based on policy", 
            "title": "Generally accepted view 1"
        }, 
        {
            "location": "/software_architecture/#microservices", 
            "text": "In computing, microservices is a software architecture style in which complex applications are composed of small, independent processes communicating with each other using language-agnostic APIs. These services are small building blocks, highly decoupled and focussed on doing a small task, facilitating a modular approach to system-building. One of concepts which integrates microservices as a software architecture style is dew computing.  1", 
            "title": "Microservices"
        }, 
        {
            "location": "/software_architecture/#properties-2", 
            "text": "Each running in its own process  Communicating with lightweight mechanisms, often an  HTTP resource API  Build around  business capabilities  Independently deployable  fully automated  deployment  Maybe in a  different programming language  and use  different data storage  technologies", 
            "title": "Properties 2"
        }, 
        {
            "location": "/software_architecture/#monolith-vs-microservice", 
            "text": "Monolith  Microservice    Simplicity  Partial Deployment    Consistency  Availability    Inter-module refactoring  Preserve Modularity     Multiple Platforms", 
            "title": "Monolith vs Microservice"
        }, 
        {
            "location": "/software_architecture/#benefits-4", 
            "text": "Their small size enables developers to be most productive.  It's easy to comprehend and test each service.  You can correctly handle failure of any dependent service.  They reduce impact of correlated failures.", 
            "title": "Benefits 4"
        }, 
        {
            "location": "/software_architecture/#web-service", 
            "text": "", 
            "title": "Web Service"
        }, 
        {
            "location": "/software_architecture/#restful-api", 
            "text": "", 
            "title": "RESTful API"
        }, 
        {
            "location": "/software_architecture/#rest-client", 
            "text": "Sense (Beta)  A JSON aware developer console to ElasticSearch.", 
            "title": "REST Client"
        }, 
        {
            "location": "/software_architecture/#api-document-and-client-generator", 
            "text": "http://swagger.io/swagger-editor/", 
            "title": "API Document and Client Generator"
        }, 
        {
            "location": "/software_architecture/#api-client", 
            "text": "CRUD Pet     API  Client    Method  URL  Body  Return Body  Method    GET  /pets   [Pet]  PetApi.list()    POST  /pets/  Pet  Pet  PetApi.create(pet)    GET  /pets/pet_id   Pet  PetApi.get(pet_id)    PUT  /pets/pet_id  Pet  Pet  PetApi.update(pet_id, pet)    DELETE  /pets/pet_id    PetApi.delete(pet_id)      CRUD Store     GET /stores  StoreApi.list()    ...  ...     Relationships  Many to many     GET /stores/sotre_id/pets  StoreApi.get_pets(store_id)   \n\n### Example\n\n[https://api.facebook.com/method/links.getStats?urls=%%URL%% =json](https://api.facebook.com/method/links.getStats?urls=%%URL%% =json)     Microservices    Slide 11/42, Micro-servies    Martin Fowler, Microservices, youtube    Rick E. Osowski, Microservices in action, Part 1: Introduction to microservices, IBM developerworks", 
            "title": "API Client"
        }, 
        {
            "location": "/licenses/", 
            "text": "Licenses\n\n\n\n\nMore\n\n\n\n\nOpen Source Licenses\n\n\nChoose A License\n\n\nTop 20 Open Source Licenses", 
            "title": "Licenses"
        }, 
        {
            "location": "/licenses/#licenses", 
            "text": "", 
            "title": "Licenses"
        }, 
        {
            "location": "/licenses/#more", 
            "text": "Open Source Licenses  Choose A License  Top 20 Open Source Licenses", 
            "title": "More"
        }
    ]
}